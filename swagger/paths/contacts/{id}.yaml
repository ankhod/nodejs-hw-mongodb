get:
  tags:
    - Contacts
  summary: Get contact by ID
  operationId: getContactById
  description: Retrieve a specific contact by its ID.
  security:
    - bearerAuth: []
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
      description: The ID of the contact to retrieve
  responses:
    '200':
      description: Successful response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: 'Contact retrieved successfully'
              data:
                type: object
                properties:
                  _id:
                    type: string
                    example: '683b67a18592f67fa7b753e3'
                  name:
                    type: string
                    example: 'John Doe'
                  email:
                    type: string
                    example: 'john@example.com'
    '404':
      description: Contact not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: 'Contact not found'
patch:
  tags:
    - Contacts
  summary: Update contact by ID
  operationId: updateContactById
  description: Update a specific contact by its ID.
  security:
    - bearerAuth: []
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
      description: The ID of the contact to update
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              example: 'John Doe Updated'
            email:
              type: string
              example: 'john.updated@example.com'
  responses:
    '200':
      description: Successful update
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: 'Contact updated successfully'
              data:
                type: object
                properties:
                  _id:
                    type: string
                    example: '683b67a18592f67fa7b753e3'
                  name:
                    type: string
                    example: 'John Doe Updated'
                  email:
                    type: string
                    example: 'john.updated@example.com'
    '404':
      description: Contact not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: 'Contact not found'
delete:
  tags:
    - Contacts
  summary: Delete contact by ID
  operationId: deleteContactById
  description: Delete a specific contact by its ID.
  security:
    - bearerAuth: []
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
      description: The ID of the contact to delete
  responses:
    '200':
      description: Successful deletion
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: 'Contact deleted successfully'
              data:
                type: object
                properties:
                  _id:
                    type: string
                    example: '683b67a18592f67fa7b753e3'
    '404':
      description: Contact not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: 'Contact not found'
